#!/usr/bin/env bash

set -ex

export BOSH_ENVIRONMENT
export BOSH_CLIENT
export BOSH_CLIENT_SECRET
export BOSH_DEPLOYMENT

export BOSH_CA_CERT="${DEPLOYMENT_DIR}/deployments/bbl/ca-cert"
export BOSH_MANIFEST="${PWD}/merged-cf-deployment/cf-deployment.yml"
export BPM_RELEASE_DIR="${PWD}/bpm-release"
export DEPLOYMENT_DIR="${PWD}/deployments-diego/${DEPLOYMENT_DIR}"
export DIEGO_OPSFILE_DIR="${PWD}/diego-release/operations"
export OPSFILE_DIR="${PWD}/merged-cf-deployment/operations"

deployments_var_file="${DEPLOYMENT_DIR}/cf-deployment-vars.yml"

expand_ops_files () {
  OPS_FILES="-o ${OPSFILE_DIR}/gcp.yml"
  OPS_FILES="${OPS_FILES} -o ${OPSFILE_DIR}/use-latest-stemcell.yml"

  OPS_FILES="${OPS_FILES} -o ${DIEGO_OPSFILE_DIR}/add-vizzini-errand.yml"
  OPS_FILES="${OPS_FILES} -o ${OPSFILE_DIR}/test/add-datadog-firehose-nozzle.yml"

  if [ "${DEPLOY_WINDOWS_CELL}" == "true" ]; then
    OPS_FILES="${OPS_FILES} -o ${OPSFILE_DIR}/windows-cell.yml"
  fi

  if [ "${USE_LOCKET}" == "true" ]; then
    OPS_FILES="${OPS_FILES} -o ${OPSFILE_DIR}/experimental/enable-locket.yml"

    if [ "${DEPLOY_WINDOWS_CELL}" == "true" ]; then
        OPS_FILES="${OPS_FILES} -o ${OPSFILE_DIR}/experimental/enable-locket-windows.yml"
    fi
  fi

  if [ "${DEPLOY_ROUTING}" == "true" ]; then
    OPS_FILES="${OPS_FILES} -o ${OPSFILE_DIR}/tcp-routing-gcp.yml"
  fi

  if [ "${USE_LOGGREGATOR_V2}" == "true" ]; then
    OPS_FILES="${OPS_FILES} -o ${OPSFILE_DIR}/experimental/enable-loggregator-v2-diego.yml"

    if [ "${DEPLOY_WINDOWS_CELL}" == "true" ]; then
      OPS_FILES="${OPS_FILES} -o ${OPSFILE_DIR}/experimental/enable-loggregator-v2-windows-cell.yml"
    fi
  fi

  if [ "${USE_POSTGRES}" == "true" ]; then
    OPS_FILES="${OPS_FILES} -o ${OPSFILE_DIR}/use-postgres.yml"

    if [ "${USE_LOCKET}" == "true" ]; then
      OPS_FILES="${OPS_FILES} -o ${OPSFILE_DIR}/experimental/enable-locket-postgres.yml"
    fi
  fi

  if [ "${USE_BRIDGE_CONSOLIDATION}" == "true" ]; then
    OPS_FILES="${OPS_FILES} -o ${OPSFILE_DIR}/bypass-cc-bridge.yml"
  fi

  if [ "${ENABLE_DECLARATIVE_HEALTHCHECKS}" == "true" ]; then
    OPS_FILES="${OPS_FILES} -o ${OPSFILE_DIR}/experimental/enable-prefer-declarative-healthchecks.yml"
    OPS_FILES="${OPS_FILES} -o ${DIEGO_OPSFILE_DIR}/enable-vizzini-delcarative-healthcheck-tests.yml"

    if [ "${DEPLOY_WINDOWS_CELL}" == "true" ]; then
      OPS_FILES="${OPS_FILES} -o ${OPSFILE_DIR}/experimental/enable-prefer-declarative-healthchecks-windows.yml"
    fi
  fi

  if [ "${USE_GROOTFS}" == "true" ]; then
    OPS_FILES="${OPS_FILES} -o ${OPSFILE_DIR}/experimental/use-grootfs.yml"
  fi

  if [ "${DETECT_CONSUL_CELL_REGISTRATIONS}" == "false" ]; then
    OPS_FILES="${OPS_FILES} -o ${OPSFILE_DIR}/experimental/skip-consul-cell-registrations.yml" 
  fi

  if [ "${USE_ETCD}" == "false" ]; then
    OPS_FILES="${OPS_FILES} -o ${OPSFILE_DIR}/experimental/disable-etcd.yml"
  fi

  if [ -d "${DEPLOYMENT_DIR}/operations" ]; then
    pushd ${DEPLOYMENT_DIR}/operations
      for opsfile in *.yml; do
        OPS_FILES="${OPS_FILES} -o ${PWD}/${opsfile}"
      done
    popd
  fi > /dev/null 2>&1

  if [ "${USE_BPM}" == "true" ]; then
    OPS_FILES="${OPS_FILES} -o ${DIEGO_OPSFILE_DIR}/enable-bpm.yml" \
                        -o <(cat <<EOF
                        - type: replace
                          path: /releases/-
                          value:
                            name: bpm
                            version: create
                            url: file://${BPM_RELEASE_DIR}
EOF
)
  fi

  echo "${OPS_FILES}"
}

bosh log-in

bosh -n upload-stemcell bosh-stemcell/*.tgz
bosh -n upload-stemcell bosh-windows-stemcell/*.tgz

bosh -n interpolate \
  --var-errs \
  --vars-file=${deployments_var_file} ${BOSH_MANIFEST} \
  $(expand_ops_files) \
  -o <(cat <<EOF
- type: replace
  path: /releases/name=diego
  value:
    name: diego
    version: create
    url: file://$(pwd)/diego-release
EOF
)


bosh -n deploy \
     --vars-file=${deployments_var_file} \
     ${BOSH_MANIFEST} \
     $(expand_ops_files) \
     -o <(cat <<EOF
- type: replace
  path: /releases/name=diego
  value:
    name: diego
    version: create
    url: file://$(pwd)/diego-release
EOF
)
